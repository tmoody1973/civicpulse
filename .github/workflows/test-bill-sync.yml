name: Test Bill Sync (Quick)

# Manual trigger only - for testing
on:
  workflow_dispatch:

jobs:
  test-sync:
    name: Test Bill Sync (10 bills, no full text)
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Fetch bills (with full text to avoid data loss)
        env:
          CONGRESS_API_KEY: ${{ secrets.CONGRESS_API_KEY }}
          RAINDROP_SERVICE_URL: ${{ secrets.RAINDROP_SERVICE_URL }}
        run: |
          echo "📥 Fetching 10 bills (WITH full text - prevents overwriting existing data)"
          echo "⚠️  Using --full flag to avoid data loss from INSERT OR REPLACE"
          npm run fetch:bills -- --limit 10 --full
          echo "✅ Bills fetched successfully"

      - name: Run post-fetch pipeline
        env:
          RAINDROP_SERVICE_URL: ${{ secrets.RAINDROP_SERVICE_URL }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          ALGOLIA_APP_ID: ${{ secrets.ALGOLIA_APP_ID }}
          ALGOLIA_ADMIN_KEY: ${{ secrets.ALGOLIA_ADMIN_KEY }}
        run: |
          echo "⚙️  Running post-fetch pipeline..."
          npx tsx scripts/post-fetch-pipeline.ts
          echo "✅ Pipeline complete"

      - name: Save test sync status
        if: always()
        env:
          RAINDROP_SERVICE_URL: ${{ secrets.RAINDROP_SERVICE_URL }}
        run: |
          echo "💾 Saving test sync status..."

          if [ ${{ job.status }} == 'success' ]; then
            STATUS='success'
          else
            STATUS='failure'
          fi

          npx tsx -e "
          (async () => {
            const response = await fetch('${RAINDROP_SERVICE_URL}/api/admin/query', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({
                table: 'sync_history',
                query: \`
                  INSERT INTO sync_history (
                    sync_type,
                    status,
                    started_at,
                    completed_at,
                    run_id,
                    run_url,
                    bills_fetched,
                    bills_processed
                  ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
                \`,
                values: [
                  'test_sync',
                  '${STATUS}',
                  new Date().toISOString(),
                  new Date().toISOString(),
                  '${{ github.run_id }}',
                  'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}',
                  10,
                  10
                ]
              })
            });

            console.log('✅ Test sync status saved');
          })();
          "

      - name: Test complete
        run: |
          echo "✅ Test sync complete!"
          echo "Check the admin dashboard to see results"
